name: Tailscale RDP

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download Essentials
      run: |
          choco install winrar -y
          choco install telegram -y
          choco install tailscale -y
          if (-not (Get-Command tailscale -ErrorAction SilentlyContinue)) {
              Write-Error "Tailscale installation failed"
              exit 1
          }
      shell: pwsh

    - name: Enable RDP and SSH
      run: |
          # Check runneradmin user
          if (-not (Get-LocalUser -Name "runneradmin" -ErrorAction SilentlyContinue)) {
              Write-Error "User runneradmin does not exist"
              exit 1
          }
          # Enable RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          # Set password
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "${{ secrets.RDP_PASSWORD }}" -Force)
          # Install OpenSSH Server
          Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
          # Start SSH service
          Start-Service sshd
          Set-Service -Name sshd -StartupType 'Automatic'
          # Configure SSH to allow password authentication
          $sshdConfig = "C:\ProgramData\ssh\sshd_config"
          (Get-Content $sshdConfig) -replace '#PasswordAuthentication yes', 'PasswordAuthentication yes' | Set-Content $sshdConfig
          (Get-Content $sshdConfig) -replace '#PermitRootLogin prohibit-password', 'PermitRootLogin yes' | Set-Content $sshdConfig
          # Ensure firewall allows SSH (port 22)
          New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22
          # Restart SSH service
          Restart-Service sshd
      shell: pwsh

    - name: Configure and Start Tailscale
      run: |
          $authKey = "${{ secrets.TAILSCALE_AUTH_KEY }}"
          if (-not $authKey) {
              Write-Error "TAILSCALE_AUTH_KEY is not set"
              exit 1
          }
          # Start Tailscale and authenticate
          tailscale up --auth-key=$authKey --hostname="github-runner-$env:GITHUB_RUN_ID"
          # Wait for Tailscale to connect
          Start-Sleep -Seconds 20
          # Check Tailscale status
          $status = (tailscale status)
          if ($status -notmatch "connected") {
              Write-Error "Tailscale failed to connect: $status"
              exit 1
          }
          # Get Tailscale IP
          $tailscaleIp = (tailscale ip --4)
          if (-not $tailscaleIp) {
              Write-Error "Failed to retrieve Tailscale IP"
              exit 1
          }
          # Output connection details
          Write-Host "Tailscale IP: $tailscaleIp"
          Write-Host "Username: runneradmin"
          Write-Host "Password: ${{ secrets.RDP_PASSWORD }}"
          Write-Host "RDP Access: Use Tailscale IP in Remote Desktop client"
          Write-Host "SSH Access: ssh runneradmin@$tailscaleIp"
          # Keep the job running for 6 hours
          Start-Sleep -Seconds 21600
      shell: pwsh
