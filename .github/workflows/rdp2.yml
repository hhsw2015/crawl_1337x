name: Tailscale RDP

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Install Tailscale
      run: |
          # Download Tailscale .exe installer
          $installerUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe"
          $installerPath = "$env:TEMP\tailscale-setup-latest.exe"
          Invoke-WebRequest -Uri $installerUrl -OutFile $installerPath
          # Run the installer silently
          Start-Process -FilePath $installerPath -ArgumentList "/S" -Wait
          # Verify Tailscale executable exists
          $tailscaleExe = "C:\Program Files\Tailscale\tailscale.exe"
          if (-not (Test-Path $tailscaleExe -ErrorAction SilentlyContinue)) {
              Write-Error "Tailscale installation failed or executable not found at $tailscaleExe"
              exit 1
          }
          # Debug: Confirm executable path
          Write-Host "Tailscale executable found at: $tailscaleExe"
      shell: pwsh

    - name: Enable RDP
      run: |
          # Check runneradmin user
          if (-not (Get-LocalUser -Name "runneradmin" -ErrorAction SilentlyContinue)) {
              Write-Error "User runneradmin does not exist"
              exit 1
          }
          # Enable RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          # Set password
          Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "${{ secrets.RDP_PASSWORD }}" -Force)
      shell: pwsh

    - name: Configure and Start Tailscale
      run: |
          $tailscaleExe = "C:\Program Files\Tailscale\tailscale.exe"
          # Verify Tailscale executable exists
          if (-not (Test-Path $tailscaleExe)) {
              Write-Error "Tailscale executable not found at $tailscaleExe"
              exit 1
          }
          $authKey = "${{ secrets.TAILSCALE_AUTH_KEY }}"
          if (-not $authKey) {
              Write-Error "TAILSCALE_AUTH_KEY is not set"
              exit 1
          }
          # Start Tailscale and authenticate using full path
          & $tailscaleExe up --auth-key=$authKey --hostname="github-runner-$env:GITHUB_RUN_ID"
          # Wait for Tailscale to connect
          Start-Sleep -Seconds 30
          # Get Tailscale IP to verify connection
          $tailscaleIp = & $tailscaleExe ip --4
          if (-not $tailscaleIp) {
              Write-Error "Failed to retrieve Tailscale IP, connection may not be established"
              exit 1
          }
          # Debug: Output Tailscale status for reference
          $status = & $tailscaleExe status
          Write-Host "Tailscale status: $status"
          # Output RDP connection details
          Write-Host "RDP Connection: $tailscaleIp:3389"
          Write-Host "Username: runneradmin"
          Write-Host "Password: ${{ secrets.RDP_PASSWORD }}"
          Write-Host "RDP Access: Use the above IP and port in Remote Desktop client"
          # Keep the job running for 6 hours
          Start-Sleep -Seconds 21600
      shell: pwsh
